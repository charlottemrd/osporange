# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
ldap_tools:
    domains:
        Labo1.int:
            domain_name: Labo1.int
            base_dn: 'DC=Labo1,DC=int'
            username: AppwebAccount
            password: O$TA@.f>@Xv9@8
            servers: [10.128.1.205]
            bind_format: '%%username%%@labo1.int'


    security:
        guard:
           # http_basic: true
            # This is the entry point/start path route name for the RedirectResponse of the Guard component
            login_path: 'app_login'
            default_target_path: '/'
            always_use_target_path: false
            target_path_parameter: '_target_path'
            use_referer: false
            failure_path: null
            failure_forward: false
            failure_path_parameter: '_failure_path'
            remember_me: false
            http_basic: false
            http_basic_domain: null
            http_basic_realm: null
        roles:
    # Using the common group name
            #ROLE_ADMIN: [ 'CN=Appweb_Manager,OU=Groupes,OU=Appweb,OU=ApplicationsProfils,DC=Labo1,DC=int' ]
            ROLE_USER: [ 'CN=Appweb_CP,OU=Groupes,OU=Appweb,OU=ApplicationsProfils,DC=Labo1,DC=int' ]
    # Using the distinguished name of the group
        default_role: ROLE_ANONYMOUS




parameters:
#locale: fr
services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    #app.event.login_listener:
     #   class: AppBundle\Event\LdapLoginListener
     #   tags:
      #      - { name: kernel.event_listener, event: ldap_tools_bundle.login.success, method: onLdapLoginSuccess }




    #    Symfony\Component\Ldap\Ldap:
    #        arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']
    #        tags:
    #            - ldap
    #    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
    #        arguments:
    #            -   host: 10.128.1.205
    #                port: 636
    #
    #                options:
    #                    protocol_version: 3
    #                    referrals: false
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    app.event.ldap_login_listener:
        class: App\Event\LdapLoginListener
        tags:
            - { name: kernel.event_listener, event: ldap_tools_bundle.login.success, method: onLdapLoginSuccess }
            - { name: kernel.event_listener, event: ldap_tools_bundle.login.failure, method: onLdapLoginFailure }
        arguments: ['@router']
    app.event.login_listener:
        class: App\Event\LoadUserListener
        tags:
             - { name: kernel.event_listener, event: ldap_tools_bundle.load_user.before, method: beforeLoadUser }
             - { name: kernel.event_listener, event: ldap_tools_bundle.load_user.after, method: afterLoadUser }

            # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

